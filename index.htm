<!DOCTYPE html>
<html>

<head>

<meta name="keywords" content="JavaScript, WebRTC, fileshare" />
<meta name="description" content="Quick fileshare with friends." />
<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1">

<title>Friendly Files</title>

<style>
</style>

	<script src="components/platform/platform.js">
	</script>

	<script src="socket.io/socket.io.js">
	</script>

	<script src="http://cdn.peerjs.com/0.3/peer.js">
	</script>

	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js">
	</script>

	<script src="FileSaver.js">
	</script>

	<link rel="import" href="./components/core-toolbar/core-toolbar.html">
	<link rel="import" href="./components/core-menu/core-menu.html">
	<link rel="import" href="./components/core-item/core-item.html">
	<link rel="import" href="./components/core-header-panel/core-header-panel.html">
	<link rel="import" href="./components/core-drawer-panel/core-drawer-panel.html">
	<link rel="import" href="./components/core-icons/core-icons.html">
	<link rel="import" href="./components/core-icon-button/core-icon-button.html">
	<link rel="import" href="./components/core-scaffold/core-scaffold.html">
	<link rel="import" href="./components/paper-icon-button/paper-icon-button.html">
	<link rel="import" href="./components/paper-button/paper-button.html">
	<!--<link rel="import" href="./components/bower_components/paper-dialog/paper-dialog.html">
	<link rel="import" href="./components/bower_components/paper-dialog/paper-dialog-transition.html">-->

	<link rel="stylesheet" type="text/css" href="f.css">
</head>

<body fullbleed unresolved>

	<core_header_panel>
		<core-toolbar id="mainheader" class="medium">
			<paper-shadow z="3"></paper-shadow>
			<paper-icon-button id="navicon" icon="menu">
			</paper-icon-button>

			<span flex>Friendly Files</span>
			<input id="add_usr" style="width: 75;"></input>
			<button id="add_usr_btn" style="width: 75;">Add Friend</button>
			<input id="usrnm" placeholder="Username" style="width: 75;"></input>
			<input type="password" id="usrpswrd" placeholder="Password" style="width: 75;"></input>
			<button id="login_btn" style="width: 75;">Log In</button>
			<button id="signup_btn" style="width: 75;">Sign Up</button>
			<button id="logout_btn" style="width: 75; visibility: hidden">Log Out</button>

		</core-toolbar>
	</core_header_panel>

	<div id="users">

	</div>

<script>
var url = 'localhost:8888';
var reader = null;
var filename = "";

var peer = null;

var socket = io(url);

socket.on('session-auth', function(data) {
	console.log("Session auth complete");
	peer = new Peer(data.key, {key: data.APIKey});
	peer.on('connection', function(conn) {
		conn.on('data', function(data) {
			console.log(data);
			saveAs(data, filename);
		});
	});
});

var addUserBtn = document.getElementById("add_usr_btn");
addUserBtn.onclick = function() {
	socket.emit('add-friend', {name: $("#add_usr").val()});
	$("#add_usr").val("");
};
var loginBtn = document.getElementById("login_btn");
loginBtn.onclick = function() {
	console.log("Log In");
	var un = document.getElementById("usrnm");
	var ps = document.getElementById("usrpswrd");
	socket.emit('log-in', {name: un.value, pswrd: ps.value});
	un.value = "";
	ps.value = "";
};
var signupBtn = document.getElementById("signup_btn");
signupBtn.onclick = function() {
	console.log("Sign Up");
	var un = document.getElementById("usrnm");
	var ps = document.getElementById("usrpswrd");
	socket.emit('new-user', {name: un.value, pswrd: ps.value});
	un.value = "";
	ps.value = "";
};

$("#logout_btn").click(function() {
	console.log("Logged out");
	socket.disconnect();
	socket = null;
	socket = io.connect(url);
	$("#usrnm").show();
	$("#usrpswrd").show();
	$("#login_btn").show();
	$("#signup_btn").show();
	$("#logout_btn").hide();

});

//create new list of people from data from the server
socket.on('get-friends', function(data) {

	$("#users").contents().remove();
	for(var i in data.friends) {
		$("#users").append("<div style='width: 250px; height: 150px; float: left; padding: 10px 10px 10px 10px;'><div id='s_"+data.friends[i]+"' align='center' style='width: 250px; height: 150px; float: left; position: absolute;'><div align='center' style='width: 250px; height: 150px; float: left; position: absolute;'><paper-shadow z='1'></paper-shadow> "+data.friends[i]+"</div><div id='"+data.friends[i]+"' align='right' style='width: 250px; height: 150px; position: absolute;'><paper-icon-button id='"+data.friends[i]+"btn' icon='cloud-download' disabled='true'></paper-icon-button></div></div>");




		var holder = document.getElementById(data.friends[i]),
		    state = document.getElementById('s_'+data.friends[i]);
	
		if (typeof window.FileReader === 'undefined') {
			state.className = 'fail';
		} else {
			state.className = 'success';
			//state.innerHTML = 'File API & FileReader available';
		}
	
		holder.ondragover = function () { this.className = 'hover'; return false; };
		holder.ondragend = function () { this.className = ''; return false; };
		holder.ondrop = function (e) {
			this.className = '';
			e.preventDefault();
	
			var file = e.dataTransfer.files[0],
			    reader = new FileReader();
			console.log(file);
	
			socket.on('get-remote-session-id:'+data.friends[i], function(data2) {
				var conn = peer.connect(data2.session);
				if(!conn) {console.log(data, data2, conn); return;}
				conn.on('open', function() {
						
					reader.onload = function(){
						conn.send(reader.result);
					};
	
					reader.readAsDataURL(file);
				});
			});

			socket.emit('request-remote-session-id', {to: data.friends[i], filename:file.name});
	
	
			return false;
		};
		
		$("#usrnm").hide();
		$("#usrpswrd").hide();
		$("#login_btn").hide();
		$("#signup_btn").hide();
		$("#logout_btn").show();
	}
});

//For dropfiles
function addEventHandler(obj, evt, handler) {
    if(obj.addEventListener) {
        // W3C method
        obj.addEventListener(evt, handler, false);
    } else if(obj.attachEvent) {
        // IE method.
        obj.attachEvent('on'+evt, handler);
    } else {
        // Old school method.
        obj['on'+evt] = handler;
    }
}

socket.on('request-file-transfer', function(data) {
	filename = data.filename;
	$("#"+data.name+"btn").removeAttr("disabled");
	$("#"+data.name+"btn").click(function() {
		socket.emit('send-remote-session-id', {to: data.name});
		$(this).attr("disabled", "disabled");
	});
});

</script>

</body>

</html>
